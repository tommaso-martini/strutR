% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strut.R
\name{.solve_q_step_picard}
\alias{.solve_q_step_picard}
\title{Semi-implicit Picard solver for the simultaneous update of moisture fronts}
\usage{
.solve_q_step_picard(
  fronts,
  theta_r,
  theta_s,
  beta,
  Ks,
  f_t,
  dt_sub,
  delta,
  max_iter = 20,
  tol_theta = 1e-08,
  debug = FALSE
)
}
\arguments{
\item{fronts}{list of fronts, each as \code{list(theta=..., x=...)} with
\code{x} the depth-like coordinate and \code{theta} the volumetric content.}

\item{theta_r, theta_s}{residual and saturation water contents (-).}

\item{beta}{Brooks-Corey shape parameter used in \eqn{K(\theta)}.}

\item{Ks}{saturated hydraulic conductivity \link{m/day}.}

\item{f_t}{top boundary supply (e.g., infiltration rate) \link{m/day}.}

\item{dt_sub}{sub-step duration \link{day}.}

\item{delta}{offset (thickness above the first Struthers layer) \link{m}.}

\item{max_iter}{maximum Picard iterations.}

\item{tol_theta}{absolute convergence tolerance on \eqn{\theta}.}

\item{debug}{logical; if \code{TRUE} prints per-iteration diagnostics.}
}
\value{
A list with
\itemize{
\item \code{new_theta}: numeric vector of updated \eqn{\theta} at fronts;
\item \code{q_vec}: numeric vector of layer fluxes used during the solve;
\item \code{converged}: logical flag;
\item \code{n_iter}: number of iterations performed.
}
}
\description{
Solves, within a single sub-step, the coupled update of \eqn{\theta} at all
Struthers-like fronts using a fixed-point (Picard) iteration. At each
iteration it recomputes the hydraulic conductivity \eqn{K(\theta)}, partitions
the inter-layer flux vector \eqn{\mathbf{q}}, integrates the ODEs for
\eqn{\theta}, and clamps the result within \eqn{[\theta_r,\theta_s]}.

Convergence is declared when \eqn{\max_i |\theta_i^{(k+1)}-\theta_i^{(k)}| <
\mathrm{tol\_theta}} or when the maximum number of iterations is reached.
}
\details{
\strong{Algorithmic outline}
\enumerate{
\item Given the current iterate \eqn{\theta^{(k)}}, compute \eqn{K(\theta^{(k)})}.
\item Compute the flux partition \eqn{\mathbf{q}} among layers from the
boundary forcing \eqn{f_t} and local conductivities (top-down allocation).
\item Advance \eqn{\theta} over \code{dt_sub}:
\itemize{
\item For the top layer, explicit Euler on storage balance.
\item For inner layers, use \code{f_euler} which couples \eqn{i} and \eqn{i-1}
consistently with the chosen discretisation.
}
\item Clamp \eqn{\theta} to \eqn{[\theta_r,\theta_s]} and test convergence.
}

If the caller detects non-convergence at the controller level, time
sub-stepping and retries can be applied externally (see
\code{struthers_redistr_under}).
}
\examples{
## Internal solver; see struthers_redistr_under() for end-to-end examples.
}
\seealso{
\code{\link{struthers_redistr_under}}
}
