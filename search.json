[{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"$$ \\require{siunitx} $$ vignette documents front‐tracking water balance model represents vertical soil column depth LL (m) gravitational infiltration redistribution (–R), free drainage bottom (D), evapotranspiration (ET) applied –R–D step. state stored ordered list wetting fronts: {(xi,θi)}=1nF,0=x0<x1<⋯<xnF≤L, \\{(x_i,\\ \\theta_i)\\}_{=1}^{n_F}, \\qquad 0=\\!x_0 < x_1 < \\cdots < x_{n_F}\\le L,  xix_i depth (m) ii-th front θi\\theta_i volumetric water content (–) immediately front. convention: Front 1 deepest front (closest LL); Front nFn_F shallowest (closest surface). two consecutive fronts xi−1x_{-1} xix_i profile piecewise constant θi\\theta_i (rectangular layers). residual saturated water contents θr\\theta_{\\mathrm{r}} θs\\theta_{\\mathrm{s}}, respectively. assume Brooks–Corey conductivity model K(θ)=Ks(θ−θrθs−θr)1/b, K(\\theta) \\;=\\; K_s \\left(\\frac{\\theta-\\theta_{\\mathrm{r}}}{\\theta_{\\mathrm{s}}-\\theta_{\\mathrm{r}}}\\right)^{1/b},  KsK_s [md−1m\\,\\mathrm{d}^{-1}] shape parameter b>0b>0.","code":""},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"notation","dir":"Articles","previous_headings":"Overview","what":"Notation","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"LL [m]: profile depth. δ\\delta [m]: depth wetting model starts (often δ=0\\delta=0). f(t)f(t) [md−1m\\,\\mathrm{d}^{-1}]: infiltration supply soil surface. θ⋆\\theta_{\\star} (theta_star): stress onset threshold. θwp\\theta_{\\mathrm{wp}} (theta_wp): wilting threshold transpiration. ZrootZ_{\\text{root}} [m]: active root-zone thickness surface; ZevapZ_{\\text{evap}} [m]: active thickness bare-soil evaporation. epe_p [md−1m\\,\\mathrm{d}^{-1}]: potential evaporation (reference ET) per day; Cv∈[0,1]C_v\\[0,1] fraction allocated transpiration day.","code":""},{"path":[]},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"flux-partition-and-front-odes-eqs--7a7b","dir":"Articles","previous_headings":"Infiltration–Redistribution Equations","what":"Flux partition and front ODEs (Eqs. 7a–7b)","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"Let qi(t)q_i(t) vertical flux immediately front ii (positive downward). one sub-step Δt\\Delta t partition surface supply ff using local conductivities: qi(t)=min(f(t),K(θi))−min(f(t),K(θi−1)),=1,…,nF, q_i(t) \\;=\\; \\min\\big(f(t),\\, K(\\theta_i)\\big)\\;-\\;\\min\\big(f(t),\\, K(\\theta_{-1})\\big), \\qquad =1,\\dots,n_F,  convention K(θ0)≡0K(\\theta_0)\\equiv 0. layer water contents θi\\theta_i evolve gravitational balance (Struthers et al., Eqs. 7a–7b). discrete form explicit–implicit Picard iteration θ\\theta, one time step Δt\\Delta t updates θin+1≈θin+Δtqi(θ(k))−K(θi(k))+K(θi−1(k))xin−xi−1n, \\theta_i^{n+1} \\approx \\theta_i^{n} + \\Delta t\\, \\frac{ q_i(\\theta^{(k)}) - K(\\theta_i^{(k)}) + K(\\theta_{-1}^{(k)})}{x_i^{n}-x_{-1}^{n}},  kk indexes Picard iterate (θ\\theta updated simultaneously). Alternative formulations iterate 𝐪=(q1,…,qnF)\\mathbf q=(q_1,\\dots,q_{n_F}); lead, convergence, mass update .","code":""},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"mass-balance-for-front-depths-eq--1","dir":"Articles","previous_headings":"Infiltration–Redistribution Equations","what":"Mass balance for front depths (Eq. 1)","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"θn+1\\theta^{n+1} integrated layer volumes known, front depths updated discrete mass balance Sin=(xin−xi−1n)(θin−θi−1n),Sin+1=Sin+qinΔt, S_i^{n} = (x_i^{n}-x_{-1}^{n})\\,(\\theta_i^{n}-\\theta_{-1}^{n}), \\qquad S_i^{n+1} = S_i^{n} + q_i^{n}\\,\\Delta t, xin+1=xi−1n+1+Sin+1max(θin+1−θi−1n+1,ε). x_i^{n+1} \\;=\\; x_{-1}^{n+1} \\;+\\; \\frac{S_i^{n+1}}{\\max\\!\\big(\\theta_i^{n+1}-\\theta_{-1}^{n+1},\\,\\varepsilon\\big)}.  ε\\varepsilon small numerical tolerance. update preserves column water mass construction.","code":""},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"free-drainage-d-and-merging","dir":"Articles","previous_headings":"Infiltration–Redistribution Equations","what":"Free drainage (D) and merging","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"Free drainage applied shallowest front (index nFn_F) mass update: xnFn+1>L,drainage=(xnFn+1−L)max(θnFn+1−θnF−1n+1,0),xnFn+1←L. \\text{} x_{n_F}^{n+1} > L,\\quad \\text{drainage} \\;=\\; (x_{n_F}^{n+1}-L)\\,\\max(\\theta_{n_F}^{n+1}-\\theta_{n_F-1}^{n+1},0),\\quad x_{n_F}^{n+1}\\leftarrow L. –R–D, adjacent fronts merged either overtake depth: xi≥xi−1x_i \\ge x_{-1}; contrast negligible: |θi−θi−1|<τ|\\theta_i-\\theta_{-1}|<\\tau; (stability guard) θ\\theta inversion detected, .e. θi<θi−1\\theta_i<\\theta_{-1} ii. Merging conserves water volume aggregating positive storage contributions Stot=∑j∈ℐmax[(xj−xj−1)(θj−θj−1),0],θnew=maxj∈ℐθj,xnew=xmin+Stotmax(θnew−θmin,ε). S_{\\text{tot}} \\;=\\; \\sum_{j\\\\mathcal } \\max\\bigl[(x_j-x_{j-1})\\,(\\theta_j-\\theta_{j-1}),\\,0\\bigr], \\quad \\theta_{\\text{new}} = \\max_{j\\\\mathcal }\\theta_j,\\quad x_{\\text{new}} = x_{\\min} + \\frac{S_{\\text{tot}}}{\\max(\\theta_{\\text{new}}-\\theta_{\\min},\\varepsilon)}.","code":""},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"evapotranspiration-with-theta_star-and-theta_mathrmwp","dir":"Articles","previous_headings":"","what":"Evapotranspiration with θ⋆\\theta_{\\star} and θwp\\theta_{\\mathrm{wp}}","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"ET applied –R–D, without moving front depths xix_i. Let root-zone [δ,δ+Zroot][\\,\\delta,\\ \\delta+Z_{\\text{root}}\\,]. Define depth-weighted mean water content root zone: θ‾root=1Zroot∫δδ+Zrootθ(z)dz≈1Zroot∑∈ℐ(δ,δ+Zroot)θiΔzi*, \\bar{\\theta}_{\\text{root}} \\;=\\; \\frac{1}{Z_{\\text{root}}}\\int_{\\delta}^{\\delta+Z_{\\text{root}}}\\theta(z)\\,\\,\\mathrm{d}z \\;\\approx\\; \\frac{1}{Z_{\\text{root}}}\\sum_{\\\\mathcal (\\delta,\\delta+Z_{\\text{root}})} \\theta_i\\,\\Delta z_i^\\ast,  Δzi*\\Delta z_i^\\ast fraction layer ii lies inside root-zone. Let Dt=epCvΔtD_t = e_p\\,C_v\\,\\Delta t potential transpiration depth daily step, Dbs=ep(1−Cv)ΔtD_{bs}= e_p(1-C_v)\\Delta t bare-soil potential evaporation depth.","code":""},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"transpiration-e_t-eqs--1012-with-theta_star-theta_mathrmwp","dir":"Articles","previous_headings":"Evapotranspiration with θ⋆\\theta_{\\star} and θwp\\theta_{\\mathrm{wp}}","what":"Transpiration EtE_t (Eqs. 10–12, with θ⋆\\theta_{\\star}, θwp\\theta_{\\mathrm{wp}})","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"Potential (unstressed) phase θ⋆\\theta_{\\star}. Water needed raise/reduce mean θ⋆\\theta_{\\star}: S⋆=max(0,(θ‾root−θ⋆)Zroot),t⋆=S⋆Dt. S_{\\star} \\;=\\; \\max\\!\\left(0,\\ \\bigl(\\bar{\\theta}_{\\text{root}}-\\theta_{\\star}\\bigr)\\,Z_{\\text{root}}\\right), \\qquad t_{\\star} \\;=\\; \\frac{S_{\\star}}{D_t}.  t⋆≥Δtt_{\\star}\\ge \\Delta t Et=DtE_t = D_t (potential). Stressed phase θ⋆\\theta_{\\star} θwp\\theta_{\\mathrm{wp}}. available storage θwp\\theta_{\\mathrm{wp}} root-zone Savail,℘=∫δδ+Zrootmax(θ(z)−θwp,0)dz. S_{\\mathrm{avail},\\wp} \\;=\\; \\int_{\\delta}^{\\delta+Z_{\\text{root}}}\\max\\big(\\theta(z)-\\theta_{\\mathrm{wp}},\\,0\\big)\\,\\,\\mathrm{d}z.  exponential form (Eq. 12, re-expressed θ\\theta) leftover time Δt−t⋆\\Delta t - t_{\\star} gives target $$ E_{t,\\mathrm{stress}} \\;=\\; S_{\\mathrm{cap}}\\, \\Bigl(1 - e^{-\\,(\\,D_t(\\Delta t - t_{\\star})\\,)/S_{\\mathrm{cap}}}\\Bigr),\\qquad S_{\\mathrm{cap}} = (\\theta_{\\star}-\\theta_{\\mathrm{wp}})\\,Z_{\\text{root}}. $$ total target Ettarget=min{Savail,℘,S⋆+Et,stress}E_t^\\text{target} = \\min\\{\\,S_{\\mathrm{avail},\\wp},\\ S_\\star + E_{t,\\mathrm{stress}}\\,\\}. Application rule (volume removal). Remove EttargetE_t^\\text{target}top–root-zone, reducing θ\\theta shallowest layers first enforcing θ≥max(θwp,θr)\\theta\\ge \\max(\\theta_{\\mathrm{wp}},\\theta_{\\mathrm{r}}). layer’s storage (xi−xi−1)(θi−θi−1)(x_i-x_{-1})(\\theta_i-\\theta_{-1}) exhausted, drop front (merge).","code":""},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"bare-soil-evaporation-e_bs-eq--9","dir":"Articles","previous_headings":"Evapotranspiration with θ⋆\\theta_{\\star} and θwp\\theta_{\\mathrm{wp}}","what":"Bare-soil evaporation EbsE_{bs} (Eq. 9)","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"Define evaporative layer [δ,δ+Zevap][\\,\\delta,\\ \\delta+Z_{\\text{evap}}\\,] (typically Zevap∼0.05Z_{\\text{evap}}\\!\\sim\\!0.05–0.1m0.1\\ \\mathrm{m}). available storage θr\\theta_{\\mathrm{r}} Sevap=∫δδ+Zevapmax(θ(z)−θr,0)dz. S_{\\mathrm{evap}} \\;=\\; \\int_{\\delta}^{\\delta+Z_{\\text{evap}}}\\max\\big(\\theta(z)-\\theta_{\\mathrm{r}},\\,0\\big)\\,\\,\\mathrm{d}z.  daily target $$ E_{bs}^\\text{target} \\;=\\; S_{\\mathrm{evap}}\\, \\Bigl(1 - e^{-\\, D_{bs}/S_{\\mathrm{evap}}}\\Bigr), $$ applied top–within [δ,δ+Zevap][\\,\\delta,\\delta+Z_{\\text{evap}}\\,] enforcing θ≥θr\\theta\\ge\\theta_{\\mathrm{r}}.","code":""},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"multilayer-transpiration-eq--18","dir":"Articles","previous_headings":"Evapotranspiration with θ⋆\\theta_{\\star} and θwp\\theta_{\\mathrm{wp}}","what":"Multilayer transpiration (Eq. 18)","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"transpiration split across multiple active layers j=1,…,Jj=1,\\dots,J (e.g. surface deep roots), distribute potential demand fj=∑∈ℐj(max(θi,j,θwp)−max(θi−1,j,θwp))∑m=1J∑∈ℐm(max(θi,m,θwp)−max(θi−1,m,θwp)),∑jfj=1, f_j \\;=\\; \\frac{\\displaystyle \\sum_{\\\\mathcal I_j} \\Big(\\max(\\theta_{,j},\\theta_{\\mathrm{wp}}) - \\max(\\theta_{-1,j},\\theta_{\\mathrm{wp}})\\Big)} {\\displaystyle \\sum_{m=1}^{J}\\sum_{\\\\mathcal I_m} \\Big(\\max(\\theta_{,m},\\theta_{\\mathrm{wp}}) - \\max(\\theta_{-1,m},\\theta_{\\mathrm{wp}})\\Big)}, \\qquad \\sum_j f_j = 1,  apply two-phase rule independently layer Dt(j)=fjDtD_t^{(j)}=f_j\\,D_t.","code":""},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"numerical-safeguards","dir":"Articles","previous_headings":"","what":"Numerical safeguards","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"Clamp θ∈[θr,θs]\\theta\\[\\theta_{\\mathrm{r}},\\theta_{\\mathrm{s}}]. Merge |θi−θi−1|<τ|\\theta_i-\\theta_{-1}|<\\tau, overtake, θ\\theta-inversion. applying ET large targets, sub-cycle removal avoid multiple front deletions one call.","code":""},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"example-40day-simulation-with-hourly-substeps","dir":"Articles","previous_headings":"","what":"Example: 40‑day simulation with hourly sub‑steps","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"following example demonstrates –R–D daily ET using θ⋆\\theta_{\\star} θwp\\theta_{\\mathrm{wp}}. Units meters days.","code":"library(strutR) # if packaged  theta_r <- 0.05 theta_s <- 0.45 beta <- 1 / 5 Ks <- 1.0 # m/day L <- 2.0 delta <- 0.0 tol_merge <- 1e-6  # ET thresholds and settings theta_wp <- 0.08 theta_st <- 0.20 Z_root_series <- rep(0.40, 40) # m Z_evap <- 0.10 # m top layer for bare-soil evaporation Cv <- 0.7 # canopy fraction dt_day <- 1.0 # day  # Initial profile: dry uniform, one deepest front at L fronts <- list(list(theta = 0.12, x = L))  # Forcings set.seed(1) ndays <- 40 rain_mm <- rep(0, ndays) rain_mm[3:4] <- 15 rain_mm[10] <- 25 rain_mm[15] <- 35 rain_mm[28:30] <- 10 rain_mm[35] <- 20 f_day <- rain_mm / 1000 # m/day  ETp_mm <- rep(3, ndays) ETp <- ETp_mm / 1000 # m/day potential ET  dt_sub <- 1 / 24 sub_steps <- as.integer(1 / dt_sub)  profiles_daily_preET <- vector(\"list\", ndays) profiles_daily_postET <- vector(\"list\", ndays) drainage_daily <- numeric(ndays) E_t_daily <- numeric(ndays) E_bs_daily <- numeric(ndays) for (d in seq_len(ndays)) {   # Infiltration–Redistribution–Drainage over the day (24 substeps)   f_t <- f_day[d]   for (k in seq_len(sub_steps)) {     step <- struthers_redistr_under(       fronts, theta_r, theta_s, beta, Ks,       L = L, delta = delta,       f_t = f_t, # m/day       dt_sub = dt_sub, # day       infill_all = FALSE,       debug = FALSE,       theta_field_capacity = NA_real_,       Z_1 = NA_real_,       tol_merge = tol_merge     )     fronts <- step$fronts     drainage_daily[d] <- drainage_daily[d] + step$drainage   }   profiles_daily_preET[[d]] <- fronts    # Daily ET: transpiration (θ★/θwp) + bare-soil evaporation (no movement of x)   et <- apply_ET(     fronts      = fronts,     ep          = ETp[d], # m/day potential ET     Cv          = Cv, # fraction to transpiration     dt          = dt_day, # one-day ET step     theta_star  = theta_st,     theta_wp    = theta_wp,     theta_r     = theta_r,     theta_s     = theta_s,     Z_root      = Z_root_series[d],     Z_evap      = Z_evap,     delta       = delta,     debug       = FALSE,     tol_merge   = tol_merge   )   fronts <- et$fronts   E_t_daily[d] <- et$E_t   E_bs_daily[d] <- et$E_bs    profiles_daily_postET[[d]] <- fronts }"},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"daily-profiles-preet-vs-postet","dir":"Articles","previous_headings":"Example: 40‑day simulation with hourly sub‑steps","what":"Daily profiles (pre‑ET vs post‑ET)","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"","code":"days_to_plot <- c(1, 3, 4, 5, 10, 15, 16, 30, 33)  op <- par(no.readonly = TRUE) par(mfrow = c(3, 3), mar = c(4, 4, 2, 1)) for (dd in days_to_plot) {   plot_single_profile(theta_r, theta_s, profiles_daily_preET[[dd]],     soil_depth = L,     timestep = paste0(\"Day \", dd, \" (pre‑ET)\"),     Z_1 = delta + Z_root_series[dd], Z_2 = delta + Z_evap,     colore = \"steelblue\"   )   # overlay post‑ET in red   theta_i <- vapply(profiles_daily_postET[[dd]], function(fr) fr$theta, numeric(1))   x_i <- vapply(profiles_daily_postET[[dd]], function(fr) fr$x, numeric(1))   ord <- order(x_i)   theta_i <- theta_i[ord]   x_i <- x_i[ord]   lines(c(theta_i[1], theta_i, theta_r, theta_r),     c(0, x_i, x_i[length(x_i)], max(x_i)),     type = \"s\", lwd = 2, col = \"firebrick\"   )   legend(\"bottomright\",     inset = 0.02, bg = \"white\", cex = 0.8, bty = \"n\",     legend = c(       sprintf(\"Rain: %g mm\", rain_mm[dd]),       sprintf(\"E_t: %.1f mm\", 1000 * E_t_daily[dd]),       sprintf(\"E_bs: %.1f mm\", 1000 * E_bs_daily[dd])     ),     text.col = c(\"black\", \"firebrick\", \"gray40\")   ) } par(op)"},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"depthaveraged-bartheta0z-time-series","dir":"Articles","previous_headings":"Example: 40‑day simulation with hourly sub‑steps","what":"Depth‑averaged θ‾(0,z*)\\bar\\theta(0,z^{*}) time series","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"","code":"depths <- c(0.05, 0.10, 0.20, 0.40, 1.0) depths <- depths[depths <= L] Theta_bar_pre <- matrix(NA_real_, nrow = ndays, ncol = length(depths)) Theta_bar_post <- matrix(NA_real_, nrow = ndays, ncol = length(depths)) colnames(Theta_bar_pre) <- paste0(\"0–\", depths, \" m\") colnames(Theta_bar_post) <- paste0(\"0–\", depths, \" m\")  for (d in seq_len(ndays)) {   for (j in seq_along(depths)) {     Theta_bar_pre[d, j] <- compute_weighted_avg_theta_by_depth(       profile = profiles_daily_preET[[d]],       depth_limit = depths[j], theta_r = theta_r, delta = delta, L = L     )     Theta_bar_post[d, j] <- compute_weighted_avg_theta_by_depth(       profile = profiles_daily_postET[[d]],       depth_limit = depths[j], theta_r = theta_r, delta = delta, L = L     )   } }  cols <- c(\"black\", \"steelblue\", \"darkgreen\", \"orange\", \"red\") par(mar = c(4, 4, 2, 1)) plot(1:ndays, Theta_bar_pre[, 1],   type = \"l\", lwd = 2, col = cols[1],   xlab = \"Day\", ylab = expression(bar(theta) ~ \"(0–z)\"),   ylim = range(Theta_bar_pre, Theta_bar_post, na.rm = TRUE),   main = expression(\"Depth‑averaged \" ~ bar(theta) ~ \" (pre/post ET)\") ) for (j in seq_along(depths)) {   lines(1:ndays, Theta_bar_pre[, j], col = cols[j], lwd = 2, lty = 2)   lines(1:ndays, Theta_bar_post[, j], col = cols[j], lwd = 2) } legend(\"topleft\",   bg = \"white\", cex = 0.85,   legend = paste0(colnames(Theta_bar_pre), \" (solid=post, dashed=pre)\"),   col = cols[seq_along(depths)], lwd = 2, lty = c(1, 2) )"},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"daily-diagnostics","dir":"Articles","previous_headings":"Example: 40‑day simulation with hourly sub‑steps","what":"Daily diagnostics","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"","code":"par(mfrow = c(1, 2), mar = c(4, 4, 2, 1)) plot(seq_len(ndays), 1000 * drainage_daily,   type = \"h\", lwd = 2,   xlab = \"Day\", ylab = \"Drainage [mm]\", main = \"Daily drainage\" ) abline(h = 0, lwd = 1) plot(seq_len(ndays), 1000 * (E_t_daily + E_bs_daily),   type = \"h\", lwd = 2,   xlab = \"Day\", ylab = \"ET [mm/day]\", main = \"Daily ET (total)\" ) abline(h = 0, lwd = 1)"},{"path":"https://tommaso-martini.github.io/strutR/articles/vignette.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Struthers Wetting-Front Model for Infiltration, Redistribution, and Drainage with ET (θ★ / θwp)","text":"Brooks, R. H., & Corey, . T. (1964). Hydraulic properties porous media. Struthers et al. (2006). multiple wetting front gravitational infiltration redistribution model water balance applications, Hydrological Processes.","code":""},{"path":"https://tommaso-martini.github.io/strutR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tommaso Martini. Author, maintainer.","code":""},{"path":"https://tommaso-martini.github.io/strutR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Martini T (2025). strutR: Implementation Struthers multi-front infiltration–redistribution–drainage (R package). R package version 0.1.0, https://github.com/-repo/strutR. Struthers , Hinz C, Sivapalan M (2006). “multiple wetting front gravitational infiltration redistribution model water balance applications.” Water Resources Research. doi:10.1029/2005WR004645.","code":"@Manual{,   title = {strutR: Implementation of Struthers multi-front infiltration–redistribution–drainage (R package)},   author = {Tommaso Martini},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/your-repo/strutR}, } @Article{,   title = {A multiple wetting front gravitational infiltration and redistribution model for water balance applications},   author = {Iain Struthers and Christoph Hinz and Murugesu Sivapalan},   journal = {Water Resources Research},   year = {2006},   doi = {10.1029/2005WR004645}, }"},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"strutr--struthers-wetting-front-model-for-infiltration-redistribution-and-drainage","dir":"","previous_headings":"","what":"strutR","title":"strutR","text":"strutR package provides complete, transparent, open-source R implementation multiple wetting-front gravitational infiltration redistribution model originally introduced : Struthers, ., Hinz, C., & Sivapalan, M. (2006). multiple wetting front gravitational infiltration redistribution model water balance applications. Water Resources Research, 42(6), W06406. https://doi.org/10.1029/2005WR004645","code":""},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"strutR","text":"Struthers model describes infiltration, redistribution, drainage one-dimensional unsaturated soil column dynamics moving wetting fronts. front represents discontinuity soil water content, moving downward infiltration proceeds merging moisture contrasts become small. model assumes gravity-driven flow fronts, conductivity governed Brooks–Corey law water mass conserved throughout redistribution drainage. R implementation, strutR, designed reproducibility, transparency, compatibility stochastic deterministic hydrological modelling. can used standalone infiltration–redistribution solver lower boundary module coupled surface root-zone models (example, two-bucket system). Main features include: Accurate representation infiltration–redistribution–drainage (IRD) processes based Struthers et al. (2006) formulation. Explicit handling multiple fronts dynamic merging drainage water table lower boundary. Brooks–Corey conductivity formulation: K(θ)=Ks(θ−θrθs−θr)1/β. K(\\theta) = K_s \\left(\\frac{\\theta - \\theta_r}{\\theta_s - \\theta_r}\\right)^{1/\\beta}. Modular structure allowing easy coupling evapotranspiration root-zone models. Full control gravitational capillary terms, numerical tolerances, merging behaviour. Vignettes utilities plotting infiltration profiles, tracking front depths, computing depth-averaged soil moisture. implementation aims provide faithful research-ready translation original conceptual model, suitable hydrological process analysis, ecohydrology, soil physics education, stochastic soil moisture studies.","code":""},{"path":[]},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"from-github","dir":"","previous_headings":"Installation","what":"From GitHub","title":"strutR","text":"","code":"# install.packages(\"devtools\")  # if not already installed devtools::install_github(\"tommaso-martini/strutR\") library(strutR)"},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"from-a-local-source-folder","dir":"","previous_headings":"Installation","what":"From a local source folder","title":"strutR","text":"installation, core functions vignettes can accessed using help(package = \"strutR\").","code":"devtools::install_local(\".\") library(strutR)"},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"quick-example","dir":"","previous_headings":"","what":"Quick Example","title":"strutR","text":"minimal infiltration–redistribution–drainage (IRD) simulation using Struthers solver: example performs single infiltration–redistribution step consistent Struthers model equations, returning updated front positions, water contents, drainage fluxes. Multiple steps can iterated represent continuous wet dry cycles.","code":"# Initial conditions fronts <- list(list(theta = 0.10, x = 2.0))  # Parameters theta_r <- 0.05 theta_s <- 0.45 beta    <- 1/8 Ks      <- 1.0 L       <- 2.0 delta   <- 0.0 dt      <- 1/24 f_t     <- 0.01  # 10 mm/day  # Run a single redistribution step res <- struthers_redistr_under(   fronts = fronts,   theta_r = theta_r, theta_s = theta_s,   beta = beta, Ks = Ks,   L = L, delta = delta,   f_t = f_t,   dt_sub = dt )  str(res)"},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"theoretical-background","dir":"","previous_headings":"","what":"Theoretical background","title":"strutR","text":"Struthers model simplifies Richards equation assuming soil moisture evolves sequence sharp wetting fronts separating regions nearly uniform water content. Infiltration creates new fronts, redistribution gradually equalises moisture differences. gravitational flux adjacent layers proportional hydraulic conductivity, redistribution continues storage gradient vanishes drainage occurs bottom boundary. Front merging ensures computational efficiency maintaining mass balance. model can applied wide range soil textures specifying KsK_s, θs\\theta_s, θr\\theta_r, β\\beta according measured literature-based hydraulic properties. Drainage can parameterised total soil depth LL effective lower boundary condition.","code":""},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"example-scripts","dir":"","previous_headings":"","what":"Example scripts","title":"strutR","text":"package includes several fully reproducible examples examples/ directory (installed together package). scripts illustrate use Struthers multiple–wetting–front model different boundary conditions evaporation–transpiration regimes. locate example files local installation, use system.file(): can also run directly without copying manually: example produces diagnostic plots prints intermediate results, making suitable research reproducibility teaching purposes.","code":"# List all example scripts available in the installed package list.files(system.file(\"examples\", package = \"strutR\"))  # Open one in the R editor file.edit(system.file(\"examples\", \"drydown1.R\", package = \"strutR\")) source(system.file(\"examples\", \"drydown2.R\", package = \"strutR\"))"},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"strutR","text":"use software, please cite original model R implementation: Struthers, ., Hinz, C., & Sivapalan, M. (2006). multiple wetting front gravitational infiltration redistribution model water balance applications. Water Resources Research, 42(6), W06406. https://doi.org/10.1029/2005WR004645 Martini, T. (2025). strutR: Struthers Wetting-Front Model Infiltration, Redistribution, Drainage (R package). Version 0.1.0. MIT License. https://doi.org/10.5281/zenodo.xxxxxx","code":""},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"license-and-authorship","dir":"","previous_headings":"","what":"License and authorship","title":"strutR","text":"Copyright (c) 2025 Tommaso Martini Department Regional Urban Studies Planning (DIST), University Turin, Italy Released MIT License. See LICENSE details. software independent, open-source reimplementation Struthers model. affiliated original authors American Geophysical Union (AGU), distributed research educational purposes .","code":""},{"path":"https://tommaso-martini.github.io/strutR/index.html","id":"related-resources","dir":"","previous_headings":"","what":"Related resources","title":"strutR","text":"Original model publication: https://doi.org/10.1029/2005WR004645 GitHub repository: https://github.com/tommaso-martini/strutR Example vignettes: vignette(\"struthers-examples\", package = \"strutR\")","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/Kfun.html","id":null,"dir":"Reference","previous_headings":"","what":"Brooks–Corey unsaturated hydraulic conductivity K(θ) — Kfun","title":"Brooks–Corey unsaturated hydraulic conductivity K(θ) — Kfun","text":"Computes Brooks–Corey conductivity \\(K(\\theta)\\) clamping \\(\\theta\\) \\([\\theta_r,\\theta_s]\\): $$K(\\theta) = K_s \\left(\\frac{\\theta - \\theta_r}{\\theta_s - \\theta_r}\\right)^{1/\\beta}.$$","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/Kfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brooks–Corey unsaturated hydraulic conductivity K(θ) — Kfun","text":"","code":"Kfun(theta, theta_s, theta_r, beta, Ks)"},{"path":"https://tommaso-martini.github.io/strutR/reference/Kfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Brooks–Corey unsaturated hydraulic conductivity K(θ) — Kfun","text":"theta numeric vector; volumetric water content (dimensionless). theta_s, theta_r numeric scalars; saturated residual water contents (–). beta numeric scalar; Brooks–Corey shape parameter (\\(1/\\beta\\) exponent). Ks numeric scalar; saturated conductivity m/day.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/Kfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Brooks–Corey unsaturated hydraulic conductivity K(θ) — Kfun","text":"numeric vector conductivities m/day, length theta.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/Kfun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Brooks–Corey unsaturated hydraulic conductivity K(θ) — Kfun","text":"","code":"Kfun(   theta = c(0.10, 0.20, 0.30),   theta_s = 0.45, theta_r = 0.05, beta = 1 / 8, Ks = 1.0 ) #> [1] 5.960464e-08 3.910661e-04 2.328306e-02"},{"path":"https://tommaso-martini.github.io/strutR/reference/apply_ET.html","id":null,"dir":"Reference","previous_headings":"","what":"ET operator on a fronts profile (single time step) — apply_ET","title":"ET operator on a fronts profile (single time step) — apply_ET","text":"Applies transpiration-evaporation partition consistent common ecohydrological practice: transpiration acts prescribed root-zone depth \\(\\theta^\\star/\\theta_{\\mathrm{wp}}\\) scheme (potential phase \\(\\theta^\\star\\), exponential stress regime toward \\(\\theta_{\\mathrm{wp}}\\)); bare-soil evaporation acts shallow \\(Z_{\\mathrm{evap}}\\) limited \\(\\theta_r\\).","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/apply_ET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ET operator on a fronts profile (single time step) — apply_ET","text":"","code":"apply_ET(   fronts,   ep,   Cv,   dt,   theta_star,   theta_wp,   theta_r,   theta_s,   Z_root,   Z_evap,   delta = 0,   debug = FALSE,   tol_merge = 1e-06 )"},{"path":"https://tommaso-martini.github.io/strutR/reference/apply_ET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ET operator on a fronts profile (single time step) — apply_ET","text":"fronts list fronts list(list(theta=..., x=...), ...). ep numeric; potential evaporation/ET m/day step. Cv numeric \\([0,1]\\); transpiring fraction. dt numeric; step duration day. theta_star, theta_wp numeric; transpiration thresholds. theta_r, theta_s numeric; residual saturated water contents. Z_root numeric; active root-zone depth m delta. Z_evap numeric; active bare-soil evaporation depth m delta. delta numeric; absolute top reference m. debug logical; print detailed diagnostics TRUE. tol_merge numeric; merge tolerance passed fronts merging routine.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/apply_ET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ET operator on a fronts profile (single time step) — apply_ET","text":"list : fronts updated fronts list ET. E_t actual transpiration volume removed m. E_bs actual bare-soil evaporation volume removed m.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/apply_ET.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ET operator on a fronts profile (single time step) — apply_ET","text":"Let step durations \\(\\Delta t\\), potential demand \\(e_p\\) m/day, transpiring fraction \\(C_v \\[0,1]\\). potential step demands : $$D_t = e_p C_v \\Delta t,\\quad D_{bs} = e_p (1-C_v) \\Delta t.$$ transpiration, available potential removal reach \\(\\bar{\\theta}\\\\theta^\\star\\) \\(S_\\star = \\max(\\bar{\\theta}-\\theta^\\star,0) Z_{\\mathrm{root}}\\). stressed contribution \\(S_{\\mathrm{cap}} (1 - e^{-D_{\\mathrm{rem}}/S_{\\mathrm{cap}}})\\) \\(S_{\\mathrm{cap}}=(\\theta^\\star-\\theta_{\\mathrm{wp}})Z_{\\mathrm{root}}\\). TR EV capped actually available storage respective lower bounds, water removed top-.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/apply_ET.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ET operator on a fronts profile (single time step) — apply_ET","text":"","code":"prof <- list(list(theta = 0.25, x = 0.2), list(theta = 0.30, x = 0.6)) apply_ET(prof,   ep = 4 / 1000, Cv = 0.7, dt = 1,   theta_star = 0.20, theta_wp = 0.08,   theta_r = 0.05, theta_s = 0.45,   Z_root = 0.4, Z_evap = 0.03 ) #> $fronts #> $fronts[[1]] #> $fronts[[1]]$theta #> [1] 0.2561187 #>  #> $fronts[[1]]$x #> [1] 0.2118742 #>  #>  #>  #> $E_t #> [1] 0.0028 #>  #> $E_bs #> [1] 0.001106438 #>"},{"path":"https://tommaso-martini.github.io/strutR/reference/compute_weighted_avg_theta_by_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Depth-averaged water content \\(\\bar{\\theta}(0\\!-\\!z^*)\\) for a stepwise profile — compute_weighted_avg_theta_by_depth","title":"Depth-averaged water content \\(\\bar{\\theta}(0\\!-\\!z^*)\\) for a stepwise profile — compute_weighted_avg_theta_by_depth","text":"Computes arithmetic, thickness-weighted average piecewise-constant \\(\\theta(z)\\) profile absolute top \\(\\delta\\) depth limit \\(z^*\\) (clamped L provided). Segments interpreted respect absolute depths; uncovered portions default \\(\\theta_r\\).","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/compute_weighted_avg_theta_by_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Depth-averaged water content \\(\\bar{\\theta}(0\\!-\\!z^*)\\) for a stepwise profile — compute_weighted_avg_theta_by_depth","text":"","code":"compute_weighted_avg_theta_by_depth(   profile,   depth_limit,   theta_r,   delta = 0,   L = NULL,   tol = 1e-12 )"},{"path":"https://tommaso-martini.github.io/strutR/reference/compute_weighted_avg_theta_by_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Depth-averaged water content \\(\\bar{\\theta}(0\\!-\\!z^*)\\) for a stepwise profile — compute_weighted_avg_theta_by_depth","text":"profile list fronts list(list(theta=..., x=...), ...). depth_limit numeric; target depth \\(z^*\\) m averaging. theta_r numeric; residual water content (used uncovered spans). delta numeric; absolute depth origin m (default 0). L optional numeric; lower bound domain m; used cap \\(z^*\\). tol numeric; small tolerance geometric comparisons.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/compute_weighted_avg_theta_by_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Depth-averaged water content \\(\\bar{\\theta}(0\\!-\\!z^*)\\) for a stepwise profile — compute_weighted_avg_theta_by_depth","text":"numeric scalar \\(\\bar{\\theta}(0\\!-\\!z^*)\\); NA \\(z^* \\le \\delta\\).","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/compute_weighted_avg_theta_by_depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Depth-averaged water content \\(\\bar{\\theta}(0\\!-\\!z^*)\\) for a stepwise profile — compute_weighted_avg_theta_by_depth","text":"","code":"prof <- list(list(theta = 0.18, x = 0.2), list(theta = 0.25, x = 0.6)) compute_weighted_avg_theta_by_depth(prof,   depth_limit = 0.5,   theta_r = 0.05, delta = 0, L = 1.0 ) #> [1] 0.222"},{"path":"https://tommaso-martini.github.io/strutR/reference/dot-solve_q_step_picard.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi-implicit Picard solver for the simultaneous update of moisture fronts — .solve_q_step_picard","title":"Semi-implicit Picard solver for the simultaneous update of moisture fronts — .solve_q_step_picard","text":"Solves, within single sub-step, coupled update \\(\\theta\\) Struthers-like fronts using fixed-point (Picard) iteration. iteration recomputes hydraulic conductivity \\(K(\\theta)\\), partitions inter-layer flux vector \\(\\mathbf{q}\\), integrates ODEs \\(\\theta\\), clamps result within \\([\\theta_r,\\theta_s]\\). Convergence declared \\(\\max_i |\\theta_i^{(k+1)}-\\theta_i^{(k)}| < \\mathrm{tol\\_theta}\\) maximum number iterations reached.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/dot-solve_q_step_picard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi-implicit Picard solver for the simultaneous update of moisture fronts — .solve_q_step_picard","text":"","code":".solve_q_step_picard(   fronts,   theta_r,   theta_s,   beta,   Ks,   f_t,   dt_sub,   delta,   max_iter = 20,   tol_theta = 1e-08,   debug = FALSE )"},{"path":"https://tommaso-martini.github.io/strutR/reference/dot-solve_q_step_picard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi-implicit Picard solver for the simultaneous update of moisture fronts — .solve_q_step_picard","text":"fronts list fronts, list(theta=..., x=...) x depth-like coordinate theta volumetric content. theta_r, theta_s residual saturation water contents (-). beta Brooks-Corey shape parameter used \\(K(\\theta)\\). Ks saturated hydraulic conductivity m/day. f_t top boundary supply (e.g., infiltration rate) m/day. dt_sub sub-step duration day. delta offset (thickness first Struthers layer) m. max_iter maximum Picard iterations. tol_theta absolute convergence tolerance \\(\\theta\\). debug logical; TRUE prints per-iteration diagnostics.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/dot-solve_q_step_picard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi-implicit Picard solver for the simultaneous update of moisture fronts — .solve_q_step_picard","text":"list new_theta: numeric vector updated \\(\\theta\\) fronts; q_vec: numeric vector layer fluxes used solve; converged: logical flag; n_iter: number iterations performed.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/dot-solve_q_step_picard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Semi-implicit Picard solver for the simultaneous update of moisture fronts — .solve_q_step_picard","text":"Algorithmic outline Given current iterate \\(\\theta^{(k)}\\), compute \\(K(\\theta^{(k)})\\). Compute flux partition \\(\\mathbf{q}\\) among layers boundary forcing \\(f_t\\) local conductivities (top-allocation). Advance \\(\\theta\\) dt_sub: top layer, explicit Euler storage balance. inner layers, use f_euler couples \\(\\) \\(-1\\) consistently chosen discretisation. Clamp \\(\\theta\\) \\([\\theta_r,\\theta_s]\\) test convergence. caller detects non-convergence controller level, time sub-stepping retries can applied externally (see struthers_redistr_under).","code":""},{"path":[]},{"path":"https://tommaso-martini.github.io/strutR/reference/dot-solve_q_step_picard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Semi-implicit Picard solver for the simultaneous update of moisture fronts — .solve_q_step_picard","text":"","code":"## Internal solver; see struthers_redistr_under() for end-to-end examples."},{"path":"https://tommaso-martini.github.io/strutR/reference/mean_theta_in_root_zone.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean water content in the root zone \\(\\bar{\\theta}(0\\!-\\!Z_{\\mathrm{root}})\\) — mean_theta_in_root_zone","title":"Mean water content in the root zone \\(\\bar{\\theta}(0\\!-\\!Z_{\\mathrm{root}})\\) — mean_theta_in_root_zone","text":"Computes thickness-weighted mean \\(\\bar{\\theta}\\) within top root-zone depth \\(Z_{\\mathrm{root}}\\), defaulting uncovered spans \\(\\theta_r\\). consistent stepwise representation used ET operators.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/mean_theta_in_root_zone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean water content in the root zone \\(\\bar{\\theta}(0\\!-\\!Z_{\\mathrm{root}})\\) — mean_theta_in_root_zone","text":"","code":"mean_theta_in_root_zone(fronts, Z_root, theta_r, delta = 0)"},{"path":"https://tommaso-martini.github.io/strutR/reference/mean_theta_in_root_zone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean water content in the root zone \\(\\bar{\\theta}(0\\!-\\!Z_{\\mathrm{root}})\\) — mean_theta_in_root_zone","text":"fronts list fronts list(list(theta=..., x=...), ...). Z_root numeric; root-zone depth m delta. theta_r numeric; residual water content. delta numeric; absolute top reference m.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/mean_theta_in_root_zone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean water content in the root zone \\(\\bar{\\theta}(0\\!-\\!Z_{\\mathrm{root}})\\) — mean_theta_in_root_zone","text":"numeric scalar \\(\\bar{\\theta}\\) \\([0,Z_{\\mathrm{root}}]\\). Returns NA \\(Z_root \\le 0\\).","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/mean_theta_in_root_zone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean water content in the root zone \\(\\bar{\\theta}(0\\!-\\!Z_{\\mathrm{root}})\\) — mean_theta_in_root_zone","text":"","code":"mean_theta_in_root_zone(list(list(theta = 0.20, x = 0.3), list(theta = 0.28, x = 0.8)),   Z_root = 0.5, theta_r = 0.05 ) #> [1] 0.28"},{"path":"https://tommaso-martini.github.io/strutR/reference/plot_single_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a stepwise θ(z) profile with fixed axes — plot_single_profile","title":"Plot a stepwise θ(z) profile with fixed axes — plot_single_profile","text":"Draws step-plot piecewise-constant water content profile \\(\\theta(z)\\) depth, using fixed \\([\\theta_r,\\theta_s]\\) x-axis inverted y-axis (depth increases downward). Optional horizontal markers can added Z_1 Z_2.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/plot_single_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a stepwise θ(z) profile with fixed axes — plot_single_profile","text":"","code":"plot_single_profile(   theta_r,   theta_s,   profile,   soil_depth,   timestep = NULL,   Z_1 = NA,   Z_2 = NA,   colore = NULL )"},{"path":"https://tommaso-martini.github.io/strutR/reference/plot_single_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a stepwise θ(z) profile with fixed axes — plot_single_profile","text":"theta_r, theta_s numeric scalars; residual saturated water contents. profile list points list(list(theta=..., x=...), ...) ordered absolute depth x m. soil_depth numeric; bottom plotted domain m. timestep optional character; label shown plot title. Z_1, Z_2 optional numeric; reference depths m drawn dashed lines. colore character; line color (default \"black\").","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/plot_single_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a stepwise θ(z) profile with fixed axes — plot_single_profile","text":"Invisibly returns NULL. Side effect: produces base R plot.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/plot_single_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a stepwise θ(z) profile with fixed axes — plot_single_profile","text":"","code":"prof <- list(list(theta = 0.18, x = 0.4), list(theta = 0.25, x = 0.8)) plot_single_profile(0.05, 0.45, prof, soil_depth = 1.0, timestep = \"Example\")"},{"path":"https://tommaso-martini.github.io/strutR/reference/pretty_print_fronts.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty-print a Struthers fronts list (debug utility) — pretty_print_fronts","title":"Pretty-print a Struthers fronts list (debug utility) — pretty_print_fronts","text":"Prints current set wetting fronts compact table indices, water contents \\(\\theta\\) depths \\(x\\) (m). Intended interactive tracing debugging.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/pretty_print_fronts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty-print a Struthers fronts list (debug utility) — pretty_print_fronts","text":"","code":"pretty_print_fronts(fronts, label = NULL)"},{"path":"https://tommaso-martini.github.io/strutR/reference/pretty_print_fronts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty-print a Struthers fronts list (debug utility) — pretty_print_fronts","text":"fronts list fronts form list(list(theta=..., x=...), ...). label optional character string printed header.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/pretty_print_fronts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pretty-print a Struthers fronts list (debug utility) — pretty_print_fronts","text":"Invisibly returns NULL. Side effect: prints console.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/pretty_print_fronts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pretty-print a Struthers fronts list (debug utility) — pretty_print_fronts","text":"","code":"pretty_print_fronts(list(list(theta = 0.20, x = 1.2), list(theta = 0.30, x = 0.6)),   label = \"Current fronts\" ) #> === Current fronts === #>  i theta   x #>  1   0.2 1.2 #>  2   0.3 0.6"},{"path":"https://tommaso-martini.github.io/strutR/reference/struthers_redistr_under.html","id":null,"dir":"Reference","previous_headings":"","what":"Infiltration-redistribution-drainage step (Struthers-style fronts) — struthers_redistr_under","title":"Infiltration-redistribution-drainage step (Struthers-style fronts) — struthers_redistr_under","text":"Advances Struthers front-based soil column one sub-step given top flux \\(f_t\\), performing () possible creation new top front, (ii) pre-merge adjacent fronts, (iii) simultaneous update \\(\\theta\\) fronts via Picard solve, (iv) update front depths \\(x\\) exact storage balance, (v) post-merge, (vi) deep drainage shallowest (topmost) front clamping \\(x\\le L\\).","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/struthers_redistr_under.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infiltration-redistribution-drainage step (Struthers-style fronts) — struthers_redistr_under","text":"","code":"struthers_redistr_under(   fronts,   theta_r,   theta_s,   beta,   Ks,   L = 2,   delta = 0,   f_t,   dt_sub = 1,   infill_all = FALSE,   debug = FALSE,   theta_field_capacity = NA_real_,   Z_1 = NA_real_,   tol_merge = 1e-06,   solver_max_iter = 20,   solver_tol_theta = 1e-08,   solver_max_halvings = 2 )"},{"path":"https://tommaso-martini.github.io/strutR/reference/struthers_redistr_under.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infiltration-redistribution-drainage step (Struthers-style fronts) — struthers_redistr_under","text":"fronts list fronts, list(theta=..., x=...) (least one). theta_r, theta_s residual saturation water contents (-). beta Brooks-Corey shape parameter used \\(K(\\theta)\\). Ks saturated hydraulic conductivity m/day. L total soil depth m. delta geometric offset first stored layer m. f_t imposed top flux m/day sub-step. dt_sub sub-step duration day. infill_all logical; TRUE \\(f_t\\) injected shallowest layer one fixed update (debug/compatibility mode). debug logical; TRUE prints detailed diagnostics. theta_field_capacity, Z_1 kept backward compatibility (unused ). tol_merge merging tolerance fronts. solver_max_iter, solver_tol_theta, solver_max_halvings Picard controls time-halving retry budget used infill_all=FALSE.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/struthers_redistr_under.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infiltration-redistribution-drainage step (Struthers-style fronts) — struthers_redistr_under","text":"list fronts: updated fronts post-merge; fronts_infil: snapshot fronts immediately \"geometric\" infiltration pre-merge (useful plotting); drainage: deep drainage volume m released sub-step.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/struthers_redistr_under.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Infiltration-redistribution-drainage step (Struthers-style fronts) — struthers_redistr_under","text":"Step order (faithful -r-d sequence original formulation) Optional new top front: \\(f_t > K(\\theta_\\mathrm{top})\\), create thin head-front \\(x\\approx \\delta\\) \\(\\theta_\\mathrm{new} = \\theta_r + (\\theta_s-\\theta_r)(f_t/K_s)^\\beta\\). Pre-merge: merge negligible layers (tolerance tol_merge). Simultaneous \\(\\theta\\) solve: use Picard iteration (.solve_q_step_picard) unless infill_all=TRUE, case boundary flux imposed topmost layer one fixed update. Update front depths: exact mass balance (Eq. 1 code comments), using previous updated \\(\\theta\\). Apply state post-merge: write back \\(\\theta,x\\) merge . Deep drainage: shallowest stored layer; excess thickness \\(x_1-L\\) converted drainage volume proportional local contrast \\(\\theta\\) \\(x_1\\) clamped \\(L\\). Field capacity corrections intentionally applied keep sequencing faithful -r-d; desired, applied redistribution/merge ET caller level.","code":""},{"path":"https://tommaso-martini.github.io/strutR/reference/struthers_redistr_under.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Infiltration-redistribution-drainage step (Struthers-style fronts) — struthers_redistr_under","text":"Struthers-style front models infiltration-redistribution-drainage; Brooks, R.H. & Corey, .T. (1966) Hydraulic properties porous media.","code":""},{"path":[]},{"path":"https://tommaso-martini.github.io/strutR/reference/struthers_redistr_under.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infiltration-redistribution-drainage step (Struthers-style fronts) — struthers_redistr_under","text":"","code":"## Minimal call (using predefined Kfun, merging, f_euler utilities): # out <- struthers_redistr_under(fronts, theta_r=0.05, theta_s=0.45, beta=1/8, #                                Ks=1.0, L=2.0, delta=0.2, f_t=0.01, dt_sub=1/24)"}]
